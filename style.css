@import "src/styles/reset.css";
@import "src/styles/vars.css";
@import "src/styles/type.css";

.visually-hidden {
  clip: rect(0 0 0 0);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}

html,
body {
  min-height: 100dvh;
  min-height: 100vh;
}

header,
main,
footer {
  position: relative;
  z-index: 2;
}

body {
  display: grid;
  grid-template-rows: auto 1fr auto;
  align-content: space-between;
  row-gap: var(--space-m);
  column-gap: var(--space-xl-2xl);
  container-name: main;
  container-type: inline-size;
  background: light-dark(var(--color-white), var(--color-black));
  color: light-dark(var(--color-black, var(--color-white)));
  padding: 1.5rem;
  font-family: var(--font-sans);
  font-weight: 400;
  font-size: var(--step-0);
  line-height: 1.6;

  &::before {
    position: fixed;
    width: 100%;
    height: 100%;
    content: "";
    background-image: url('/texture.webp');
    background-repeat: repeat;
    background-attachment: fixed;
    z-index: 1;
    opacity: 0.3;
    top: 0;
    left: 0;
  }

  &::selection {
    background-color: light-dark(var(--color-black), var(--color-white));
    color: light-dark(var(--color-white), var(--color-black));
  }
}

@media (prefers-color-scheme: dark) {
  body::before {
    filter: invert(1);
  }
}

a {
  color: light-dark(var(--color-black), var(--color-white));
  text-underline-offset: 0.1rem;

  &:hover,
  &:focus,
  &:active {
    text-decoration: none;
    background: light-dark(var(--color-black), var(--color-white));
    color: light-dark(var(--color-white), var(--color-black));
  }
}

.container {
  display: grid;
  gap: var(--space-m);

  @container (min-width: 768px) {
    gap: var(--space-2xl-3xl);
    grid-template-columns: 1fr auto;
  }

  &:has(aside) {
    justify-content: space-between;
  }
}

.button {
  font-size: var(--step--3);
  border: 1px solid;
  border-color: light-dark(var(--color-black), var(--color-white));
  color: light-dark(var(--color-black), var(--color-white));
  font-family: var(--font-mono);
  text-decoration: none;
  padding: 0.5rem 0.8rem;
  text-transform: uppercase;
  display: inline-flex;

  &:hover,
  &:focus,
  &:active {
    background: light-dark(var(--color-black), var(--color-white));
    color: light-dark(var(--color-white), var(--color-black));
  }

  &:has(> svg) {
    margin-block-start: var(--space-m);
    display: inline-flex;
    gap: 0.25rem;
    align-items: center;

    svg {
      width: auto;
      height: 1rem;
      fill: currentColor;
    }
  }
}

.heading-line {
  position: relative;
  margin-block-start: 0;
  margin-block-end: var(--space-m);

  span {
    background: light-dark(var(--color-white), var(--color-black));
    padding-inline-end: 0.8rem;
    position: relative;
    z-index: 1;
  }

  &::after {
    content: "";
    position: absolute;
    top: calc(50% - 1px);
    left: 0;
    width: 100%;
    height: 1px;
    background: light-dark(var(--color-black), var(--color-white));
  }
}

.main-content {
  max-width: var(--container-width);

  article:not(:last-child) {
    margin-block-end: var(--space-2xl);
  }

  &.full {
    max-width: var(--container-width-full);
  }
}

.badge {
  font-size: var(--step--3);
  font-family: var(--font-mono);
  text-transform: uppercase;
  background: light-dark(var(--color-black), var(--color-white));
  color: light-dark(var(--color-white), var(--color-black));
  line-height: 1;
  display: inline-block;
  padding: 0.5rem 0.8rem;
  border-radius: 5px;
  text-decoration: none;

  &.badge-xs {
    padding: 0.2rem 0.3rem;
  }

  &:hover,
  &:focus {
    background: light-dark(var(--color-white), var(--color-black));
    color: light-dark(var(--color-black), var(--color-white));
  }
}

ul.grid {
  display: grid;
  gap: var(--space-xl);
  grid-template-columns: repeat(auto-fill, minmax(16rem, 1fr));
}